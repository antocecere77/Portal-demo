server.port=8050

#basic auth creddentials
#spring.security.user.name=client
#spring.security.user.password=client

#configs to connect to a secured server
spring.boot.admin.client.url=http://localhost:8080
spring.boot.admin.client.instance.service-base-url=http://localhost:8050
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin

#configs to give secured server info
#spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
#spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

#app config
spring.application.name=spring-boot-admin-client

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


postgres.srvUrl=jdbc:postgresql://192.168.99.100:5433/Alphashop
postgres.userId=postgres
postgres.password=123_Stella

logging.file=./logs/spring-boot-logger.log
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx 